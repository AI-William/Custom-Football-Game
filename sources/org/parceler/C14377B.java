package org.parceler;

import android.os.Parcelable;
import java.lang.reflect.Constructor;
import java.lang.reflect.InvocationTargetException;
import java.util.concurrent.ConcurrentHashMap;
import java.util.concurrent.ConcurrentMap;

/* renamed from: org.parceler.B */
/* compiled from: Parcels */
public final class C14377B {

    /* renamed from: a */
    private static final C14378a f43249a = new C14378a();

    /* renamed from: org.parceler.B$a */
    /* compiled from: Parcels */
    private static final class C14378a {

        /* renamed from: a */
        private ConcurrentMap<Class, C14379b> f43250a;

        private C14378a() {
            this.f43250a = new ConcurrentHashMap();
        }

        /* renamed from: b */
        public C14379b mo45443b(Class clazz) {
            C14379b result = (C14379b) this.f43250a.get(clazz);
            if (result != null) {
                return result;
            }
            C14379b value = mo45441a(clazz);
            if (Parcelable.class.isAssignableFrom(clazz)) {
                value = new C14425s();
            }
            if (value != null) {
                C14379b result2 = (C14379b) this.f43250a.putIfAbsent(clazz, value);
                if (result2 == null) {
                    return value;
                }
                return result2;
            }
            StringBuilder sb = new StringBuilder();
            sb.append("Unable to find generated Parcelable class for ");
            sb.append(clazz.getName());
            sb.append(", verify that your class is configured properly and that the Parcelable class ");
            sb.append(m45946c(clazz));
            sb.append(" is generated by Parceler.");
            throw new ParcelerRuntimeException(sb.toString());
        }

        /* renamed from: c */
        private static String m45946c(Class clazz) {
            StringBuilder sb = new StringBuilder();
            sb.append(clazz.getName());
            sb.append("$$");
            sb.append("Parcelable");
            return sb.toString();
        }

        /* renamed from: a */
        public C14379b mo45441a(Class clazz) {
            try {
                return new C14380c(clazz, Class.forName(m45946c(clazz)));
            } catch (ClassNotFoundException e) {
                return null;
            }
        }

        /* renamed from: a */
        public void mo45442a(C14381C<C14379b> repository) {
            this.f43250a.putAll(repository.get());
        }
    }

    /* renamed from: org.parceler.B$b */
    /* compiled from: Parcels */
    public interface C14379b<T> {
        /* renamed from: a */
        Parcelable mo45444a(T t);
    }

    /* renamed from: org.parceler.B$c */
    /* compiled from: Parcels */
    private static final class C14380c<T> implements C14379b<T> {

        /* renamed from: a */
        private final Constructor<? extends Parcelable> f43251a;

        public C14380c(Class<T> parcelClass, Class<? extends Parcelable> parcelWrapperClass) {
            try {
                this.f43251a = parcelWrapperClass.getConstructor(new Class[]{parcelClass});
            } catch (NoSuchMethodException e) {
                throw new ParcelerRuntimeException("Unable to create ParcelFactory Type", e);
            }
        }

        /* renamed from: a */
        public Parcelable mo45444a(T input) {
            String str = "Unable to create ParcelFactory Type";
            try {
                return (Parcelable) this.f43251a.newInstance(new Object[]{input});
            } catch (InstantiationException e) {
                throw new ParcelerRuntimeException(str, e);
            } catch (IllegalAccessException e2) {
                throw new ParcelerRuntimeException(str, e2);
            } catch (InvocationTargetException e3) {
                throw new ParcelerRuntimeException(str, e3);
            }
        }
    }

    static {
        f43249a.mo45442a((C14381C<C14379b>) NonParcelRepository.m45954a());
    }

    /* renamed from: a */
    public static <T> Parcelable m45944a(T input) {
        if (input == null) {
            return null;
        }
        return m45943a(input.getClass(), input);
    }

    /* renamed from: a */
    public static <T> Parcelable m45943a(Class<? extends T> inputType, T input) {
        if (input == null) {
            return null;
        }
        return f43249a.mo45443b(inputType).mo45444a(input);
    }

    /* renamed from: a */
    public static <T> T m45945a(Parcelable input) {
        if (input == null) {
            return null;
        }
        return ((C14474z) input).getParcel();
    }
}

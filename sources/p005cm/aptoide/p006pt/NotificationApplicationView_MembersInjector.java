package p005cm.aptoide.p006pt;

import com.crashlytics.android.C0075a;
import java.util.List;
import javax.inject.Provider;
import okhttp3.OkHttpClient;
import org.jacoco.agent.p025rt.internal_8ff85ea.Offline;
import p005cm.aptoide.accountmanager.AdultContent;
import p005cm.aptoide.accountmanager.AptoideAccountManager;
import p005cm.aptoide.analytics.AnalyticsManager;
import p005cm.aptoide.analytics.implementation.navigation.NavigationTracker;
import p005cm.aptoide.p006pt.account.AdultContentAnalytics;
import p005cm.aptoide.p006pt.ads.AdsRepository;
import p005cm.aptoide.p006pt.ads.AdsUserPropertyManager;
import p005cm.aptoide.p006pt.analytics.FirstLaunchAnalytics;
import p005cm.aptoide.p006pt.database.accessors.Database;
import p005cm.aptoide.p006pt.dataprovider.cache.L2Cache;
import p005cm.aptoide.p006pt.dataprovider.interfaces.TokenInvalidator;
import p005cm.aptoide.p006pt.dataprovider.p010ws.BodyInterceptor;
import p005cm.aptoide.p006pt.dataprovider.p010ws.p011v2.aptwords.AdsApplicationVersionCodeProvider;
import p005cm.aptoide.p006pt.dataprovider.p010ws.p013v7.BaseBody;
import p005cm.aptoide.p006pt.downloadmanager.AptoideDownloadManager;
import p005cm.aptoide.p006pt.file.CacheHelper;
import p005cm.aptoide.p006pt.install.InstallManager;
import p005cm.aptoide.p006pt.install.PackageRepository;
import p005cm.aptoide.p006pt.install.installer.RootInstallationRetryHandler;
import p005cm.aptoide.p006pt.networking.AuthenticationPersistence;
import p005cm.aptoide.p006pt.networking.IdsRepository;
import p005cm.aptoide.p006pt.notification.NotificationAnalytics;
import p005cm.aptoide.p006pt.preferences.Preferences;
import p005cm.aptoide.p006pt.preferences.SecurePreferences;
import p005cm.aptoide.p006pt.root.RootAvailabilityManager;
import p005cm.aptoide.p006pt.search.suggestions.SearchSuggestionManager;
import p005cm.aptoide.p006pt.search.suggestions.TrendingManager;
import p005cm.aptoide.p006pt.sync.SyncScheduler;
import p005cm.aptoide.p006pt.sync.alarm.SyncStorage;
import p005cm.aptoide.p006pt.utils.p015q.QManager;
import p318e.C13183b;

/* renamed from: cm.aptoide.pt.NotificationApplicationView_MembersInjector */
public final class NotificationApplicationView_MembersInjector implements C13183b<NotificationApplicationView> {
    private static transient /* synthetic */ boolean[] $jacocoData;
    private final Provider<AptoideAccountManager> accountManagerProvider;

    /* renamed from: accountSettingsBodyInterceptorPoolV7AndBodyInterceptorPoolV7Provider */
    private final Provider<BodyInterceptor<BaseBody>> f4263xc59f298a;
    private final Provider<AdsRepository> adsRepositoryProvider;
    private final Provider<AdsUserPropertyManager> adsUserPropertyManagerProvider;
    private final Provider<AdultContentAnalytics> adultContentAnalyticsProvider;
    private final Provider<AdultContent> adultContentProvider;
    private final Provider<SyncScheduler> alarmSyncSchedulerProvider;
    private final Provider<AnalyticsManager> analyticsManagerProvider;
    private final Provider<AdsApplicationVersionCodeProvider> applicationVersionCodeProvider;
    private final Provider<AptoideDownloadManager> aptoideDownloadManagerProvider;
    private final Provider<AuthenticationPersistence> authenticationPersistenceProvider;
    private final Provider<BodyInterceptor<p005cm.aptoide.p006pt.dataprovider.p010ws.p012v3.BaseBody>> bodyInterceptorV3Provider;
    private final Provider<BodyInterceptor<BaseBody>> bodyInterceptorWebV7Provider;
    private final Provider<CacheHelper> cacheHelperProvider;
    private final Provider<C0075a> crashlyticsProvider;
    private final Provider<Database> databaseProvider;
    private final Provider<OkHttpClient> defaultClientProvider;
    private final Provider<List<String>> defaultFollowedStoresProvider;
    private final Provider<FirstLaunchAnalytics> firstLaunchAnalyticsProvider;
    private final Provider<L2Cache> httpClientCacheProvider;
    private final Provider<IdsRepository> idsRepositoryProvider;
    private final Provider<InstallManager> installManagerProvider;
    private final Provider<InvalidRefreshTokenLogoutManager> invalidRefreshTokenLogoutManagerProvider;
    private final Provider<NavigationTracker> navigationTrackerProvider;
    private final Provider<NotificationAnalytics> notificationAnalyticsProvider;
    private final Provider<PackageRepository> packageRepositoryProvider;
    private final Provider<Preferences> preferencesProvider;
    private final Provider<QManager> qManagerProvider;
    private final Provider<RootAvailabilityManager> rootAvailabilityManagerProvider;
    private final Provider<RootInstallationRetryHandler> rootInstallationRetryHandlerProvider;
    private final Provider<SearchSuggestionManager> searchSuggestionManagerProvider;
    private final Provider<SecurePreferences> securePreferencesProvider;
    private final Provider<SettingsManager> settingsManagerProvider;
    private final Provider<AptoideShortcutManager> shortcutManagerProvider;
    private final Provider<SyncStorage> syncStorageProvider;
    private final Provider<TokenInvalidator> tokenInvalidatorProvider;
    private final Provider<TrendingManager> trendingManagerProvider;

    private static /* synthetic */ boolean[] $jacocoInit() {
        boolean[] zArr = $jacocoData;
        if (zArr != null) {
            return zArr;
        }
        boolean[] probes = Offline.getProbes(1436627021259341016L, "cm/aptoide/pt/NotificationApplicationView_MembersInjector", 67);
        $jacocoData = probes;
        return probes;
    }

    public /* bridge */ /* synthetic */ void injectMembers(Object obj) {
        boolean[] $jacocoInit = $jacocoInit();
        injectMembers((NotificationApplicationView) obj);
        $jacocoInit[66] = true;
    }

    public NotificationApplicationView_MembersInjector(Provider<Database> databaseProvider2, Provider<AptoideDownloadManager> aptoideDownloadManagerProvider2, Provider<CacheHelper> cacheHelperProvider2, Provider<AptoideAccountManager> accountManagerProvider2, Provider<Preferences> preferencesProvider2, Provider<SecurePreferences> securePreferencesProvider2, Provider<AdultContent> adultContentProvider2, Provider<IdsRepository> idsRepositoryProvider2, Provider<OkHttpClient> defaultClientProvider2, Provider<RootAvailabilityManager> rootAvailabilityManagerProvider2, Provider<AuthenticationPersistence> authenticationPersistenceProvider2, Provider<C0075a> crashlyticsProvider2, Provider<SyncScheduler> alarmSyncSchedulerProvider2, Provider<BodyInterceptor<BaseBody>> accountSettingsBodyInterceptorPoolV7AndBodyInterceptorPoolV7Provider, Provider<BodyInterceptor<BaseBody>> bodyInterceptorWebV7Provider2, Provider<BodyInterceptor<p005cm.aptoide.p006pt.dataprovider.p010ws.p012v3.BaseBody>> bodyInterceptorV3Provider2, Provider<L2Cache> httpClientCacheProvider2, Provider<QManager> qManagerProvider2, Provider<TokenInvalidator> tokenInvalidatorProvider2, Provider<PackageRepository> packageRepositoryProvider2, Provider<AdsApplicationVersionCodeProvider> applicationVersionCodeProvider2, Provider<AdsRepository> adsRepositoryProvider2, Provider<SyncStorage> syncStorageProvider2, Provider<NavigationTracker> navigationTrackerProvider2, Provider<TrendingManager> trendingManagerProvider2, Provider<AdultContentAnalytics> adultContentAnalyticsProvider2, Provider<NotificationAnalytics> notificationAnalyticsProvider2, Provider<SearchSuggestionManager> searchSuggestionManagerProvider2, Provider<AnalyticsManager> analyticsManagerProvider2, Provider<FirstLaunchAnalytics> firstLaunchAnalyticsProvider2, Provider<InvalidRefreshTokenLogoutManager> invalidRefreshTokenLogoutManagerProvider2, Provider<RootInstallationRetryHandler> rootInstallationRetryHandlerProvider2, Provider<AptoideShortcutManager> shortcutManagerProvider2, Provider<SettingsManager> settingsManagerProvider2, Provider<InstallManager> installManagerProvider2, Provider<List<String>> defaultFollowedStoresProvider2, Provider<AdsUserPropertyManager> adsUserPropertyManagerProvider2) {
        boolean[] $jacocoInit = $jacocoInit();
        this.databaseProvider = databaseProvider2;
        this.aptoideDownloadManagerProvider = aptoideDownloadManagerProvider2;
        this.cacheHelperProvider = cacheHelperProvider2;
        this.accountManagerProvider = accountManagerProvider2;
        this.preferencesProvider = preferencesProvider2;
        this.securePreferencesProvider = securePreferencesProvider2;
        this.adultContentProvider = adultContentProvider2;
        this.idsRepositoryProvider = idsRepositoryProvider2;
        this.defaultClientProvider = defaultClientProvider2;
        this.rootAvailabilityManagerProvider = rootAvailabilityManagerProvider2;
        this.authenticationPersistenceProvider = authenticationPersistenceProvider2;
        this.crashlyticsProvider = crashlyticsProvider2;
        this.alarmSyncSchedulerProvider = alarmSyncSchedulerProvider2;
        this.f4263xc59f298a = accountSettingsBodyInterceptorPoolV7AndBodyInterceptorPoolV7Provider;
        this.bodyInterceptorWebV7Provider = bodyInterceptorWebV7Provider2;
        this.bodyInterceptorV3Provider = bodyInterceptorV3Provider2;
        this.httpClientCacheProvider = httpClientCacheProvider2;
        this.qManagerProvider = qManagerProvider2;
        this.tokenInvalidatorProvider = tokenInvalidatorProvider2;
        this.packageRepositoryProvider = packageRepositoryProvider2;
        this.applicationVersionCodeProvider = applicationVersionCodeProvider2;
        this.adsRepositoryProvider = adsRepositoryProvider2;
        this.syncStorageProvider = syncStorageProvider2;
        this.navigationTrackerProvider = navigationTrackerProvider2;
        this.trendingManagerProvider = trendingManagerProvider2;
        this.adultContentAnalyticsProvider = adultContentAnalyticsProvider2;
        this.notificationAnalyticsProvider = notificationAnalyticsProvider2;
        this.searchSuggestionManagerProvider = searchSuggestionManagerProvider2;
        this.analyticsManagerProvider = analyticsManagerProvider2;
        this.firstLaunchAnalyticsProvider = firstLaunchAnalyticsProvider2;
        this.invalidRefreshTokenLogoutManagerProvider = invalidRefreshTokenLogoutManagerProvider2;
        this.rootInstallationRetryHandlerProvider = rootInstallationRetryHandlerProvider2;
        this.shortcutManagerProvider = shortcutManagerProvider2;
        this.settingsManagerProvider = settingsManagerProvider2;
        this.installManagerProvider = installManagerProvider2;
        this.defaultFollowedStoresProvider = defaultFollowedStoresProvider2;
        this.adsUserPropertyManagerProvider = adsUserPropertyManagerProvider2;
        $jacocoInit[0] = true;
    }

    public static C13183b<NotificationApplicationView> create(Provider<Database> databaseProvider2, Provider<AptoideDownloadManager> aptoideDownloadManagerProvider2, Provider<CacheHelper> cacheHelperProvider2, Provider<AptoideAccountManager> accountManagerProvider2, Provider<Preferences> preferencesProvider2, Provider<SecurePreferences> securePreferencesProvider2, Provider<AdultContent> adultContentProvider2, Provider<IdsRepository> idsRepositoryProvider2, Provider<OkHttpClient> defaultClientProvider2, Provider<RootAvailabilityManager> rootAvailabilityManagerProvider2, Provider<AuthenticationPersistence> authenticationPersistenceProvider2, Provider<C0075a> crashlyticsProvider2, Provider<SyncScheduler> alarmSyncSchedulerProvider2, Provider<BodyInterceptor<BaseBody>> accountSettingsBodyInterceptorPoolV7AndBodyInterceptorPoolV7Provider, Provider<BodyInterceptor<BaseBody>> bodyInterceptorWebV7Provider2, Provider<BodyInterceptor<p005cm.aptoide.p006pt.dataprovider.p010ws.p012v3.BaseBody>> bodyInterceptorV3Provider2, Provider<L2Cache> httpClientCacheProvider2, Provider<QManager> qManagerProvider2, Provider<TokenInvalidator> tokenInvalidatorProvider2, Provider<PackageRepository> packageRepositoryProvider2, Provider<AdsApplicationVersionCodeProvider> applicationVersionCodeProvider2, Provider<AdsRepository> adsRepositoryProvider2, Provider<SyncStorage> syncStorageProvider2, Provider<NavigationTracker> navigationTrackerProvider2, Provider<TrendingManager> trendingManagerProvider2, Provider<AdultContentAnalytics> adultContentAnalyticsProvider2, Provider<NotificationAnalytics> notificationAnalyticsProvider2, Provider<SearchSuggestionManager> searchSuggestionManagerProvider2, Provider<AnalyticsManager> analyticsManagerProvider2, Provider<FirstLaunchAnalytics> firstLaunchAnalyticsProvider2, Provider<InvalidRefreshTokenLogoutManager> invalidRefreshTokenLogoutManagerProvider2, Provider<RootInstallationRetryHandler> rootInstallationRetryHandlerProvider2, Provider<AptoideShortcutManager> shortcutManagerProvider2, Provider<SettingsManager> settingsManagerProvider2, Provider<InstallManager> installManagerProvider2, Provider<List<String>> defaultFollowedStoresProvider2, Provider<AdsUserPropertyManager> adsUserPropertyManagerProvider2) {
        Provider<Database> provider = databaseProvider2;
        Provider<AptoideDownloadManager> provider2 = aptoideDownloadManagerProvider2;
        Provider<CacheHelper> provider3 = cacheHelperProvider2;
        Provider<AptoideAccountManager> provider4 = accountManagerProvider2;
        Provider<Preferences> provider5 = preferencesProvider2;
        Provider<SecurePreferences> provider6 = securePreferencesProvider2;
        Provider<AdultContent> provider7 = adultContentProvider2;
        Provider<IdsRepository> provider8 = idsRepositoryProvider2;
        Provider<OkHttpClient> provider9 = defaultClientProvider2;
        Provider<RootAvailabilityManager> provider10 = rootAvailabilityManagerProvider2;
        Provider<AuthenticationPersistence> provider11 = authenticationPersistenceProvider2;
        Provider<C0075a> provider12 = crashlyticsProvider2;
        Provider<SyncScheduler> provider13 = alarmSyncSchedulerProvider2;
        Provider<BodyInterceptor<BaseBody>> provider14 = accountSettingsBodyInterceptorPoolV7AndBodyInterceptorPoolV7Provider;
        Provider<BodyInterceptor<BaseBody>> provider15 = bodyInterceptorWebV7Provider2;
        Provider<BodyInterceptor<p005cm.aptoide.p006pt.dataprovider.p010ws.p012v3.BaseBody>> provider16 = bodyInterceptorV3Provider2;
        Provider<L2Cache> provider17 = httpClientCacheProvider2;
        Provider<QManager> provider18 = qManagerProvider2;
        Provider<TokenInvalidator> provider19 = tokenInvalidatorProvider2;
        Provider<PackageRepository> provider20 = packageRepositoryProvider2;
        Provider<AdsApplicationVersionCodeProvider> provider21 = applicationVersionCodeProvider2;
        Provider<AdsRepository> provider22 = adsRepositoryProvider2;
        Provider<SyncStorage> provider23 = syncStorageProvider2;
        Provider<NavigationTracker> provider24 = navigationTrackerProvider2;
        Provider<TrendingManager> provider25 = trendingManagerProvider2;
        Provider<AdultContentAnalytics> provider26 = adultContentAnalyticsProvider2;
        Provider<NotificationAnalytics> provider27 = notificationAnalyticsProvider2;
        Provider<SearchSuggestionManager> provider28 = searchSuggestionManagerProvider2;
        Provider<AnalyticsManager> provider29 = analyticsManagerProvider2;
        Provider<FirstLaunchAnalytics> provider30 = firstLaunchAnalyticsProvider2;
        Provider<InvalidRefreshTokenLogoutManager> provider31 = invalidRefreshTokenLogoutManagerProvider2;
        Provider<RootInstallationRetryHandler> provider32 = rootInstallationRetryHandlerProvider2;
        Provider<AptoideShortcutManager> provider33 = shortcutManagerProvider2;
        Provider<SettingsManager> provider34 = settingsManagerProvider2;
        Provider<InstallManager> provider35 = installManagerProvider2;
        Provider<List<String>> provider36 = defaultFollowedStoresProvider2;
        Provider<AdsUserPropertyManager> provider37 = adsUserPropertyManagerProvider2;
        boolean[] $jacocoInit = $jacocoInit();
        NotificationApplicationView_MembersInjector notificationApplicationView_MembersInjector = new NotificationApplicationView_MembersInjector(provider, provider2, provider3, provider4, provider5, provider6, provider7, provider8, provider9, provider10, provider11, provider12, provider13, provider14, provider15, provider16, provider17, provider18, provider19, provider20, provider21, provider22, provider23, provider24, provider25, provider26, provider27, provider28, provider29, provider30, provider31, provider32, provider33, provider34, provider35, provider36, provider37);
        $jacocoInit[1] = true;
        return notificationApplicationView_MembersInjector;
    }

    public void injectMembers(NotificationApplicationView instance) {
        boolean[] $jacocoInit = $jacocoInit();
        AptoideApplication_MembersInjector.injectDatabase(instance, (Database) this.databaseProvider.get());
        Provider<AptoideDownloadManager> provider = this.aptoideDownloadManagerProvider;
        $jacocoInit[2] = true;
        AptoideDownloadManager aptoideDownloadManager = (AptoideDownloadManager) provider.get();
        $jacocoInit[3] = true;
        AptoideApplication_MembersInjector.injectAptoideDownloadManager(instance, aptoideDownloadManager);
        $jacocoInit[4] = true;
        AptoideApplication_MembersInjector.injectCacheHelper(instance, (CacheHelper) this.cacheHelperProvider.get());
        $jacocoInit[5] = true;
        AptoideApplication_MembersInjector.injectAccountManager(instance, (AptoideAccountManager) this.accountManagerProvider.get());
        $jacocoInit[6] = true;
        AptoideApplication_MembersInjector.injectPreferences(instance, (Preferences) this.preferencesProvider.get());
        Provider<SecurePreferences> provider2 = this.securePreferencesProvider;
        $jacocoInit[7] = true;
        SecurePreferences securePreferences = (SecurePreferences) provider2.get();
        $jacocoInit[8] = true;
        AptoideApplication_MembersInjector.injectSecurePreferences(instance, securePreferences);
        $jacocoInit[9] = true;
        AptoideApplication_MembersInjector.injectAdultContent(instance, (AdultContent) this.adultContentProvider.get());
        $jacocoInit[10] = true;
        AptoideApplication_MembersInjector.injectIdsRepository(instance, (IdsRepository) this.idsRepositoryProvider.get());
        $jacocoInit[11] = true;
        AptoideApplication_MembersInjector.injectDefaultClient(instance, (OkHttpClient) this.defaultClientProvider.get());
        Provider<RootAvailabilityManager> provider3 = this.rootAvailabilityManagerProvider;
        $jacocoInit[12] = true;
        RootAvailabilityManager rootAvailabilityManager = (RootAvailabilityManager) provider3.get();
        $jacocoInit[13] = true;
        AptoideApplication_MembersInjector.injectRootAvailabilityManager(instance, rootAvailabilityManager);
        Provider<AuthenticationPersistence> provider4 = this.authenticationPersistenceProvider;
        $jacocoInit[14] = true;
        AuthenticationPersistence authenticationPersistence = (AuthenticationPersistence) provider4.get();
        $jacocoInit[15] = true;
        AptoideApplication_MembersInjector.injectAuthenticationPersistence(instance, authenticationPersistence);
        $jacocoInit[16] = true;
        AptoideApplication_MembersInjector.injectCrashlytics(instance, (C0075a) this.crashlyticsProvider.get());
        Provider<SyncScheduler> provider5 = this.alarmSyncSchedulerProvider;
        $jacocoInit[17] = true;
        SyncScheduler syncScheduler = (SyncScheduler) provider5.get();
        $jacocoInit[18] = true;
        AptoideApplication_MembersInjector.injectAlarmSyncScheduler(instance, syncScheduler);
        Provider<BodyInterceptor<BaseBody>> provider6 = this.f4263xc59f298a;
        $jacocoInit[19] = true;
        BodyInterceptor bodyInterceptor = (BodyInterceptor) provider6.get();
        $jacocoInit[20] = true;
        AptoideApplication_MembersInjector.injectBodyInterceptorPoolV7(instance, bodyInterceptor);
        Provider<BodyInterceptor<BaseBody>> provider7 = this.bodyInterceptorWebV7Provider;
        $jacocoInit[21] = true;
        BodyInterceptor bodyInterceptor2 = (BodyInterceptor) provider7.get();
        $jacocoInit[22] = true;
        AptoideApplication_MembersInjector.injectBodyInterceptorWebV7(instance, bodyInterceptor2);
        Provider<BodyInterceptor<p005cm.aptoide.p006pt.dataprovider.p010ws.p012v3.BaseBody>> provider8 = this.bodyInterceptorV3Provider;
        $jacocoInit[23] = true;
        BodyInterceptor bodyInterceptor3 = (BodyInterceptor) provider8.get();
        $jacocoInit[24] = true;
        AptoideApplication_MembersInjector.injectBodyInterceptorV3(instance, bodyInterceptor3);
        Provider<L2Cache> provider9 = this.httpClientCacheProvider;
        $jacocoInit[25] = true;
        L2Cache l2Cache = (L2Cache) provider9.get();
        $jacocoInit[26] = true;
        AptoideApplication_MembersInjector.injectHttpClientCache(instance, l2Cache);
        $jacocoInit[27] = true;
        AptoideApplication_MembersInjector.injectQManager(instance, (QManager) this.qManagerProvider.get());
        Provider<TokenInvalidator> provider10 = this.tokenInvalidatorProvider;
        $jacocoInit[28] = true;
        TokenInvalidator tokenInvalidator = (TokenInvalidator) provider10.get();
        $jacocoInit[29] = true;
        AptoideApplication_MembersInjector.injectTokenInvalidator(instance, tokenInvalidator);
        Provider<PackageRepository> provider11 = this.packageRepositoryProvider;
        $jacocoInit[30] = true;
        PackageRepository packageRepository = (PackageRepository) provider11.get();
        $jacocoInit[31] = true;
        AptoideApplication_MembersInjector.injectPackageRepository(instance, packageRepository);
        Provider<AdsApplicationVersionCodeProvider> provider12 = this.applicationVersionCodeProvider;
        $jacocoInit[32] = true;
        AdsApplicationVersionCodeProvider adsApplicationVersionCodeProvider = (AdsApplicationVersionCodeProvider) provider12.get();
        $jacocoInit[33] = true;
        AptoideApplication_MembersInjector.injectApplicationVersionCodeProvider(instance, adsApplicationVersionCodeProvider);
        $jacocoInit[34] = true;
        AptoideApplication_MembersInjector.injectAdsRepository(instance, (AdsRepository) this.adsRepositoryProvider.get());
        $jacocoInit[35] = true;
        AptoideApplication_MembersInjector.injectSyncStorage(instance, (SyncStorage) this.syncStorageProvider.get());
        Provider<NavigationTracker> provider13 = this.navigationTrackerProvider;
        $jacocoInit[36] = true;
        NavigationTracker navigationTracker = (NavigationTracker) provider13.get();
        $jacocoInit[37] = true;
        AptoideApplication_MembersInjector.injectNavigationTracker(instance, navigationTracker);
        Provider<BodyInterceptor<BaseBody>> provider14 = this.f4263xc59f298a;
        $jacocoInit[38] = true;
        BodyInterceptor bodyInterceptor4 = (BodyInterceptor) provider14.get();
        $jacocoInit[39] = true;
        AptoideApplication_MembersInjector.injectAccountSettingsBodyInterceptorPoolV7(instance, bodyInterceptor4);
        Provider<TrendingManager> provider15 = this.trendingManagerProvider;
        $jacocoInit[40] = true;
        TrendingManager trendingManager = (TrendingManager) provider15.get();
        $jacocoInit[41] = true;
        AptoideApplication_MembersInjector.injectTrendingManager(instance, trendingManager);
        Provider<AdultContentAnalytics> provider16 = this.adultContentAnalyticsProvider;
        $jacocoInit[42] = true;
        AdultContentAnalytics adultContentAnalytics = (AdultContentAnalytics) provider16.get();
        $jacocoInit[43] = true;
        AptoideApplication_MembersInjector.injectAdultContentAnalytics(instance, adultContentAnalytics);
        Provider<NotificationAnalytics> provider17 = this.notificationAnalyticsProvider;
        $jacocoInit[44] = true;
        NotificationAnalytics notificationAnalytics = (NotificationAnalytics) provider17.get();
        $jacocoInit[45] = true;
        AptoideApplication_MembersInjector.injectNotificationAnalytics(instance, notificationAnalytics);
        Provider<SearchSuggestionManager> provider18 = this.searchSuggestionManagerProvider;
        $jacocoInit[46] = true;
        SearchSuggestionManager searchSuggestionManager = (SearchSuggestionManager) provider18.get();
        $jacocoInit[47] = true;
        AptoideApplication_MembersInjector.injectSearchSuggestionManager(instance, searchSuggestionManager);
        Provider<AnalyticsManager> provider19 = this.analyticsManagerProvider;
        $jacocoInit[48] = true;
        AnalyticsManager analyticsManager = (AnalyticsManager) provider19.get();
        $jacocoInit[49] = true;
        AptoideApplication_MembersInjector.injectAnalyticsManager(instance, analyticsManager);
        Provider<FirstLaunchAnalytics> provider20 = this.firstLaunchAnalyticsProvider;
        $jacocoInit[50] = true;
        FirstLaunchAnalytics firstLaunchAnalytics = (FirstLaunchAnalytics) provider20.get();
        $jacocoInit[51] = true;
        AptoideApplication_MembersInjector.injectFirstLaunchAnalytics(instance, firstLaunchAnalytics);
        Provider<InvalidRefreshTokenLogoutManager> provider21 = this.invalidRefreshTokenLogoutManagerProvider;
        $jacocoInit[52] = true;
        InvalidRefreshTokenLogoutManager invalidRefreshTokenLogoutManager = (InvalidRefreshTokenLogoutManager) provider21.get();
        $jacocoInit[53] = true;
        AptoideApplication_MembersInjector.injectInvalidRefreshTokenLogoutManager(instance, invalidRefreshTokenLogoutManager);
        Provider<RootInstallationRetryHandler> provider22 = this.rootInstallationRetryHandlerProvider;
        $jacocoInit[54] = true;
        RootInstallationRetryHandler rootInstallationRetryHandler = (RootInstallationRetryHandler) provider22.get();
        $jacocoInit[55] = true;
        AptoideApplication_MembersInjector.injectRootInstallationRetryHandler(instance, rootInstallationRetryHandler);
        Provider<AptoideShortcutManager> provider23 = this.shortcutManagerProvider;
        $jacocoInit[56] = true;
        AptoideShortcutManager aptoideShortcutManager = (AptoideShortcutManager) provider23.get();
        $jacocoInit[57] = true;
        AptoideApplication_MembersInjector.injectShortcutManager(instance, aptoideShortcutManager);
        Provider<SettingsManager> provider24 = this.settingsManagerProvider;
        $jacocoInit[58] = true;
        SettingsManager settingsManager = (SettingsManager) provider24.get();
        $jacocoInit[59] = true;
        AptoideApplication_MembersInjector.injectSettingsManager(instance, settingsManager);
        $jacocoInit[60] = true;
        AptoideApplication_MembersInjector.injectInstallManager(instance, (InstallManager) this.installManagerProvider.get());
        Provider<List<String>> provider25 = this.defaultFollowedStoresProvider;
        $jacocoInit[61] = true;
        List list = (List) provider25.get();
        $jacocoInit[62] = true;
        AptoideApplication_MembersInjector.injectDefaultFollowedStores(instance, list);
        Provider<AdsUserPropertyManager> provider26 = this.adsUserPropertyManagerProvider;
        $jacocoInit[63] = true;
        AdsUserPropertyManager adsUserPropertyManager = (AdsUserPropertyManager) provider26.get();
        $jacocoInit[64] = true;
        AptoideApplication_MembersInjector.injectAdsUserPropertyManager(instance, adsUserPropertyManager);
        $jacocoInit[65] = true;
    }
}

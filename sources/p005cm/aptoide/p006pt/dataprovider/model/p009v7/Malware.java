package p005cm.aptoide.p006pt.dataprovider.model.p009v7;

import java.util.List;

/* renamed from: cm.aptoide.pt.dataprovider.model.v7.Malware */
public class Malware {
    public static final String GOOGLE_PLAY = "Google Play";
    public static final String PASSED = "passed";
    public static final String WARN = "warn";
    private String added;
    private String modified;
    private Rank rank;
    private Reason reason;

    /* renamed from: cm.aptoide.pt.dataprovider.model.v7.Malware$Rank */
    public enum Rank {
        TRUSTED,
        WARNING,
        UNKNOWN,
        CRITICAL
    }

    /* renamed from: cm.aptoide.pt.dataprovider.model.v7.Malware$Reason */
    public static class Reason {
        private Manual manual;
        private Scanned scanned;
        private SignatureValidated signatureValidated;
        private ThirdPartyValidated thirdpartyValidated;

        /* renamed from: cm.aptoide.pt.dataprovider.model.v7.Malware$Reason$Manual */
        public static class Manual {

            /* renamed from: av */
            private List<String> f6090av;
            private String date;
            private Status status;

            public String getDate() {
                return this.date;
            }

            public void setDate(String date2) {
                this.date = date2;
            }

            public Status getStatus() {
                return this.status;
            }

            public void setStatus(Status status2) {
                this.status = status2;
            }

            public List<String> getAv() {
                return this.f6090av;
            }

            public void setAv(List<String> av) {
                this.f6090av = av;
            }

            /* access modifiers changed from: protected */
            public boolean canEqual(Object other) {
                return other instanceof Manual;
            }

            public boolean equals(Object o) {
                if (o == this) {
                    return true;
                }
                if (!(o instanceof Manual)) {
                    return false;
                }
                Manual other = (Manual) o;
                if (!other.canEqual(this)) {
                    return false;
                }
                String date2 = getDate();
                Object other$date = other.getDate();
                if (date2 != null ? !date2.equals(other$date) : other$date != null) {
                    return false;
                }
                Status status2 = getStatus();
                Object other$status = other.getStatus();
                if (status2 != null ? !status2.equals(other$status) : other$status != null) {
                    return false;
                }
                Object this$av = getAv();
                Object other$av = other.getAv();
                if (this$av != null ? this$av.equals(other$av) : other$av == null) {
                    return true;
                }
                return false;
            }

            public int hashCode() {
                String date2 = getDate();
                int i = 43;
                int result = (1 * 59) + (date2 == null ? 43 : date2.hashCode());
                Status status2 = getStatus();
                int result2 = (result * 59) + (status2 == null ? 43 : status2.hashCode());
                Object $av = getAv();
                int i2 = result2 * 59;
                if ($av != null) {
                    i = $av.hashCode();
                }
                return i2 + i;
            }

            public String toString() {
                StringBuilder sb = new StringBuilder();
                sb.append("Malware.Reason.Manual(date=");
                sb.append(getDate());
                sb.append(", status=");
                sb.append(getStatus());
                sb.append(", av=");
                sb.append(getAv());
                sb.append(")");
                return sb.toString();
            }
        }

        /* renamed from: cm.aptoide.pt.dataprovider.model.v7.Malware$Reason$Scanned */
        public static class Scanned {
            private List<AvInfo> avInfo;
            private String date;
            private Status status;

            /* renamed from: cm.aptoide.pt.dataprovider.model.v7.Malware$Reason$Scanned$AvInfo */
            public static class AvInfo {
                private List<Infection> infections;
                private String name;

                /* renamed from: cm.aptoide.pt.dataprovider.model.v7.Malware$Reason$Scanned$AvInfo$Infection */
                public static class Infection {
                    private String description;
                    private String name;

                    public String getName() {
                        return this.name;
                    }

                    public void setName(String name2) {
                        this.name = name2;
                    }

                    public String getDescription() {
                        return this.description;
                    }

                    public void setDescription(String description2) {
                        this.description = description2;
                    }

                    /* access modifiers changed from: protected */
                    public boolean canEqual(Object other) {
                        return other instanceof Infection;
                    }

                    public boolean equals(Object o) {
                        if (o == this) {
                            return true;
                        }
                        if (!(o instanceof Infection)) {
                            return false;
                        }
                        Infection other = (Infection) o;
                        if (!other.canEqual(this)) {
                            return false;
                        }
                        String name2 = getName();
                        Object other$name = other.getName();
                        if (name2 != null ? !name2.equals(other$name) : other$name != null) {
                            return false;
                        }
                        String description2 = getDescription();
                        Object other$description = other.getDescription();
                        if (description2 != null ? description2.equals(other$description) : other$description == null) {
                            return true;
                        }
                        return false;
                    }

                    public int hashCode() {
                        String name2 = getName();
                        int i = 43;
                        int result = (1 * 59) + (name2 == null ? 43 : name2.hashCode());
                        String description2 = getDescription();
                        int i2 = result * 59;
                        if (description2 != null) {
                            i = description2.hashCode();
                        }
                        return i2 + i;
                    }

                    public String toString() {
                        StringBuilder sb = new StringBuilder();
                        sb.append("Malware.Reason.Scanned.AvInfo.Infection(name=");
                        sb.append(getName());
                        sb.append(", description=");
                        sb.append(getDescription());
                        sb.append(")");
                        return sb.toString();
                    }
                }

                public List<Infection> getInfections() {
                    return this.infections;
                }

                public void setInfections(List<Infection> infections2) {
                    this.infections = infections2;
                }

                public String getName() {
                    return this.name;
                }

                public void setName(String name2) {
                    this.name = name2;
                }

                /* access modifiers changed from: protected */
                public boolean canEqual(Object other) {
                    return other instanceof AvInfo;
                }

                public boolean equals(Object o) {
                    if (o == this) {
                        return true;
                    }
                    if (!(o instanceof AvInfo)) {
                        return false;
                    }
                    AvInfo other = (AvInfo) o;
                    if (!other.canEqual(this)) {
                        return false;
                    }
                    Object this$infections = getInfections();
                    Object other$infections = other.getInfections();
                    if (this$infections != null ? !this$infections.equals(other$infections) : other$infections != null) {
                        return false;
                    }
                    String name2 = getName();
                    Object other$name = other.getName();
                    if (name2 != null ? name2.equals(other$name) : other$name == null) {
                        return true;
                    }
                    return false;
                }

                public int hashCode() {
                    Object $infections = getInfections();
                    int i = 43;
                    int result = (1 * 59) + ($infections == null ? 43 : $infections.hashCode());
                    String name2 = getName();
                    int i2 = result * 59;
                    if (name2 != null) {
                        i = name2.hashCode();
                    }
                    return i2 + i;
                }

                public String toString() {
                    StringBuilder sb = new StringBuilder();
                    sb.append("Malware.Reason.Scanned.AvInfo(infections=");
                    sb.append(getInfections());
                    sb.append(", name=");
                    sb.append(getName());
                    sb.append(")");
                    return sb.toString();
                }
            }

            public Status getStatus() {
                return this.status;
            }

            public void setStatus(Status status2) {
                this.status = status2;
            }

            public String getDate() {
                return this.date;
            }

            public void setDate(String date2) {
                this.date = date2;
            }

            public List<AvInfo> getAvInfo() {
                return this.avInfo;
            }

            public void setAvInfo(List<AvInfo> avInfo2) {
                this.avInfo = avInfo2;
            }

            /* access modifiers changed from: protected */
            public boolean canEqual(Object other) {
                return other instanceof Scanned;
            }

            public boolean equals(Object o) {
                if (o == this) {
                    return true;
                }
                if (!(o instanceof Scanned)) {
                    return false;
                }
                Scanned other = (Scanned) o;
                if (!other.canEqual(this)) {
                    return false;
                }
                Status status2 = getStatus();
                Object other$status = other.getStatus();
                if (status2 != null ? !status2.equals(other$status) : other$status != null) {
                    return false;
                }
                String date2 = getDate();
                Object other$date = other.getDate();
                if (date2 != null ? !date2.equals(other$date) : other$date != null) {
                    return false;
                }
                Object this$avInfo = getAvInfo();
                Object other$avInfo = other.getAvInfo();
                if (this$avInfo != null ? this$avInfo.equals(other$avInfo) : other$avInfo == null) {
                    return true;
                }
                return false;
            }

            public int hashCode() {
                Status status2 = getStatus();
                int i = 43;
                int result = (1 * 59) + (status2 == null ? 43 : status2.hashCode());
                String date2 = getDate();
                int result2 = (result * 59) + (date2 == null ? 43 : date2.hashCode());
                Object $avInfo = getAvInfo();
                int i2 = result2 * 59;
                if ($avInfo != null) {
                    i = $avInfo.hashCode();
                }
                return i2 + i;
            }

            public String toString() {
                StringBuilder sb = new StringBuilder();
                sb.append("Malware.Reason.Scanned(status=");
                sb.append(getStatus());
                sb.append(", date=");
                sb.append(getDate());
                sb.append(", avInfo=");
                sb.append(getAvInfo());
                sb.append(")");
                return sb.toString();
            }
        }

        /* renamed from: cm.aptoide.pt.dataprovider.model.v7.Malware$Reason$SignatureValidated */
        public static class SignatureValidated {
            private String date;
            private String signatureFrom;
            private Status status;

            public String getDate() {
                return this.date;
            }

            public void setDate(String date2) {
                this.date = date2;
            }

            public Status getStatus() {
                return this.status;
            }

            public void setStatus(Status status2) {
                this.status = status2;
            }

            public String getSignatureFrom() {
                return this.signatureFrom;
            }

            public void setSignatureFrom(String signatureFrom2) {
                this.signatureFrom = signatureFrom2;
            }

            /* access modifiers changed from: protected */
            public boolean canEqual(Object other) {
                return other instanceof SignatureValidated;
            }

            public boolean equals(Object o) {
                if (o == this) {
                    return true;
                }
                if (!(o instanceof SignatureValidated)) {
                    return false;
                }
                SignatureValidated other = (SignatureValidated) o;
                if (!other.canEqual(this)) {
                    return false;
                }
                String date2 = getDate();
                Object other$date = other.getDate();
                if (date2 != null ? !date2.equals(other$date) : other$date != null) {
                    return false;
                }
                Status status2 = getStatus();
                Object other$status = other.getStatus();
                if (status2 != null ? !status2.equals(other$status) : other$status != null) {
                    return false;
                }
                String signatureFrom2 = getSignatureFrom();
                Object other$signatureFrom = other.getSignatureFrom();
                if (signatureFrom2 != null ? signatureFrom2.equals(other$signatureFrom) : other$signatureFrom == null) {
                    return true;
                }
                return false;
            }

            public int hashCode() {
                String date2 = getDate();
                int i = 43;
                int result = (1 * 59) + (date2 == null ? 43 : date2.hashCode());
                Status status2 = getStatus();
                int result2 = (result * 59) + (status2 == null ? 43 : status2.hashCode());
                String signatureFrom2 = getSignatureFrom();
                int i2 = result2 * 59;
                if (signatureFrom2 != null) {
                    i = signatureFrom2.hashCode();
                }
                return i2 + i;
            }

            public String toString() {
                StringBuilder sb = new StringBuilder();
                sb.append("Malware.Reason.SignatureValidated(date=");
                sb.append(getDate());
                sb.append(", status=");
                sb.append(getStatus());
                sb.append(", signatureFrom=");
                sb.append(getSignatureFrom());
                sb.append(")");
                return sb.toString();
            }
        }

        /* renamed from: cm.aptoide.pt.dataprovider.model.v7.Malware$Reason$Status */
        public enum Status {
            passed,
            failed,
            blacklisted,
            warn
        }

        /* renamed from: cm.aptoide.pt.dataprovider.model.v7.Malware$Reason$ThirdPartyValidated */
        public static class ThirdPartyValidated {
            private String date;
            private String store;

            public String getDate() {
                return this.date;
            }

            public void setDate(String date2) {
                this.date = date2;
            }

            public String getStore() {
                return this.store;
            }

            public void setStore(String store2) {
                this.store = store2;
            }

            /* access modifiers changed from: protected */
            public boolean canEqual(Object other) {
                return other instanceof ThirdPartyValidated;
            }

            public boolean equals(Object o) {
                if (o == this) {
                    return true;
                }
                if (!(o instanceof ThirdPartyValidated)) {
                    return false;
                }
                ThirdPartyValidated other = (ThirdPartyValidated) o;
                if (!other.canEqual(this)) {
                    return false;
                }
                String date2 = getDate();
                Object other$date = other.getDate();
                if (date2 != null ? !date2.equals(other$date) : other$date != null) {
                    return false;
                }
                String store2 = getStore();
                Object other$store = other.getStore();
                if (store2 != null ? store2.equals(other$store) : other$store == null) {
                    return true;
                }
                return false;
            }

            public int hashCode() {
                String date2 = getDate();
                int i = 43;
                int result = (1 * 59) + (date2 == null ? 43 : date2.hashCode());
                String store2 = getStore();
                int i2 = result * 59;
                if (store2 != null) {
                    i = store2.hashCode();
                }
                return i2 + i;
            }

            public String toString() {
                StringBuilder sb = new StringBuilder();
                sb.append("Malware.Reason.ThirdPartyValidated(date=");
                sb.append(getDate());
                sb.append(", store=");
                sb.append(getStore());
                sb.append(")");
                return sb.toString();
            }
        }

        public SignatureValidated getSignatureValidated() {
            return this.signatureValidated;
        }

        public void setSignatureValidated(SignatureValidated signatureValidated2) {
            this.signatureValidated = signatureValidated2;
        }

        public ThirdPartyValidated getThirdpartyValidated() {
            return this.thirdpartyValidated;
        }

        public void setThirdpartyValidated(ThirdPartyValidated thirdpartyValidated2) {
            this.thirdpartyValidated = thirdpartyValidated2;
        }

        public Manual getManual() {
            return this.manual;
        }

        public void setManual(Manual manual2) {
            this.manual = manual2;
        }

        public Scanned getScanned() {
            return this.scanned;
        }

        public void setScanned(Scanned scanned2) {
            this.scanned = scanned2;
        }

        /* access modifiers changed from: protected */
        public boolean canEqual(Object other) {
            return other instanceof Reason;
        }

        public boolean equals(Object o) {
            if (o == this) {
                return true;
            }
            if (!(o instanceof Reason)) {
                return false;
            }
            Reason other = (Reason) o;
            if (!other.canEqual(this)) {
                return false;
            }
            SignatureValidated signatureValidated2 = getSignatureValidated();
            Object other$signatureValidated = other.getSignatureValidated();
            if (signatureValidated2 != null ? !signatureValidated2.equals(other$signatureValidated) : other$signatureValidated != null) {
                return false;
            }
            ThirdPartyValidated thirdpartyValidated2 = getThirdpartyValidated();
            Object other$thirdpartyValidated = other.getThirdpartyValidated();
            if (thirdpartyValidated2 != null ? !thirdpartyValidated2.equals(other$thirdpartyValidated) : other$thirdpartyValidated != null) {
                return false;
            }
            Manual manual2 = getManual();
            Object other$manual = other.getManual();
            if (manual2 != null ? !manual2.equals(other$manual) : other$manual != null) {
                return false;
            }
            Scanned scanned2 = getScanned();
            Object other$scanned = other.getScanned();
            if (scanned2 != null ? scanned2.equals(other$scanned) : other$scanned == null) {
                return true;
            }
            return false;
        }

        public int hashCode() {
            int i;
            SignatureValidated signatureValidated2 = getSignatureValidated();
            int i2 = 43;
            int result = (1 * 59) + (signatureValidated2 == null ? 43 : signatureValidated2.hashCode());
            ThirdPartyValidated thirdpartyValidated2 = getThirdpartyValidated();
            int i3 = result * 59;
            if (thirdpartyValidated2 == null) {
                i = 43;
            } else {
                i = thirdpartyValidated2.hashCode();
            }
            int result2 = i3 + i;
            Manual manual2 = getManual();
            int result3 = (result2 * 59) + (manual2 == null ? 43 : manual2.hashCode());
            Scanned scanned2 = getScanned();
            int i4 = result3 * 59;
            if (scanned2 != null) {
                i2 = scanned2.hashCode();
            }
            return i4 + i2;
        }

        public String toString() {
            StringBuilder sb = new StringBuilder();
            sb.append("Malware.Reason(signatureValidated=");
            sb.append(getSignatureValidated());
            sb.append(", thirdpartyValidated=");
            sb.append(getThirdpartyValidated());
            sb.append(", manual=");
            sb.append(getManual());
            sb.append(", scanned=");
            sb.append(getScanned());
            sb.append(")");
            return sb.toString();
        }
    }

    public Rank getRank() {
        return this.rank;
    }

    public void setRank(Rank rank2) {
        this.rank = rank2;
    }

    public Reason getReason() {
        return this.reason;
    }

    public void setReason(Reason reason2) {
        this.reason = reason2;
    }

    public String getAdded() {
        return this.added;
    }

    public void setAdded(String added2) {
        this.added = added2;
    }

    public String getModified() {
        return this.modified;
    }

    public void setModified(String modified2) {
        this.modified = modified2;
    }

    public int hashCode() {
        Rank rank2 = getRank();
        int i = 43;
        int result = (1 * 59) + (rank2 == null ? 43 : rank2.hashCode());
        Reason reason2 = getReason();
        int result2 = (result * 59) + (reason2 == null ? 43 : reason2.hashCode());
        String added2 = getAdded();
        int result3 = (result2 * 59) + (added2 == null ? 43 : added2.hashCode());
        String modified2 = getModified();
        int i2 = result3 * 59;
        if (modified2 != null) {
            i = modified2.hashCode();
        }
        return i2 + i;
    }

    /* access modifiers changed from: protected */
    public boolean canEqual(Object other) {
        return other instanceof Malware;
    }

    public boolean equals(Object o) {
        if (o == this) {
            return true;
        }
        if (!(o instanceof Malware)) {
            return false;
        }
        Malware other = (Malware) o;
        if (!other.canEqual(this)) {
            return false;
        }
        Rank rank2 = getRank();
        Object other$rank = other.getRank();
        if (rank2 != null ? !rank2.equals(other$rank) : other$rank != null) {
            return false;
        }
        Reason reason2 = getReason();
        Object other$reason = other.getReason();
        if (reason2 != null ? !reason2.equals(other$reason) : other$reason != null) {
            return false;
        }
        String added2 = getAdded();
        Object other$added = other.getAdded();
        if (added2 != null ? !added2.equals(other$added) : other$added != null) {
            return false;
        }
        String modified2 = getModified();
        Object other$modified = other.getModified();
        if (modified2 != null ? modified2.equals(other$modified) : other$modified == null) {
            return true;
        }
        return false;
    }

    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("Malware(rank=");
        sb.append(getRank());
        sb.append(", reason=");
        sb.append(getReason());
        sb.append(", added=");
        sb.append(getAdded());
        sb.append(", modified=");
        sb.append(getModified());
        sb.append(")");
        return sb.toString();
    }
}
